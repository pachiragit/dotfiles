[[plugins]]
repo = 'Shougo/neosnippet-snippets'

[[plugins]]
repo = 'thinca/vim-quickrun'
hook_source = '''
  " vimprocで非同期実行
  " 成功時にバッファ、失敗時にQuickFixで表示
  " 結果表示のサイズ調整など
  let g:quickrun_config = {
      \ '_' : {
          \ 'runner' : 'vimproc',
          \ 'runner/vimproc/updatetime' : 40,
          \ 'outputter' : 'error',
          \ 'outputter/error/success' : 'buffer',
          \ 'outputter/error/error'   : 'quickfix',
          \ 'outputter/buffer/split' : ':botright 8sp',
      \ }
  \}
  " 実行時に前回の表示内容をクローズ&保存してから実行
  let g:quickrun_no_default_key_mappings = 1
  nmap <Leader>r :cclose<CR>:write<CR>:QuickRun -mode n<CR>
'''

[[plugins]]
repo = 'cohama/lexima.vim'
hook_post_source = '''
  call lexima#add_rule({'char': '$', 'input_after': '$', 'filetype': ['tex', 'plaintex']})
  call lexima#add_rule({'char': '$', 'at': '\%#\$', 'leave': 1, 'filetype': ['tex', 'plaintex']})
  call lexima#add_rule({'char': '<BS>', 'at': '\$\%#\$', 'delete': 1, 'filetype': ['tex', 'plaintex']})
'''
on_i = 1

[[plugins]]
repo = 'Shougo/unite.vim'

[[plugins]]
repo = 'itchyny/lightline.vim'

[[plugins]]
repo = 'scrooloose/nerdtree'

[[plugins]]
repo = 'bronson/vim-trailing-whitespace'

[[plugins]]
repo = 'Yggdroot/indentLine'

[[plugins]]
repo = 'tyru/caw.vim'
hook_source = '''
  nmap <C-k> <Plug>(caw:hatpos:toggle)
  vmap <C-k> <Plug>(caw:hatpos:toggle)
'''

[[plugins]]
repo = 'w0ng/vim-hybrid'

[[plugins]]
repo = 'tomasr/molokai'

[[plugins]]
repo = 'cocopon/iceberg.vim'

[[plugins]]
repo = 'roxma/nvim-yarp'
if = '!has("nvim")'

[[plugins]]
repo = 'roxma/vim-hug-neovim-rpc'
if = '!has("nvim")'

[[plugins]]
repo = 'Shougo/neosnippet'
hook_source = '''
  imap <C-k>     <Plug>(neosnippet_expand_or_jump)
  smap <C-k>     <Plug>(neosnippet_expand_or_jump)
  xmap <C-k>     <Plug>(neosnippet_expand_target)
  if has('conceal')
    set conceallevel=2 concealcursor=niv
  endif
'''
on_i  = 1
on_ft = ['snippet']
depends = ['neosnippet-snippets']
